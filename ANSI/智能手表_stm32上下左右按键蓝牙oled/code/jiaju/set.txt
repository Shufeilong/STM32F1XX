void RTC_set(){
	RTC_TimeTypeDef RTC_TimeStruct;
	RTC_DateTypeDef RTC_DateStruct;
	int Num_get=0;
	int Key_a=0;
	int Num_now[2]={0};
	char Flash_=0;
	char Flash_num=0;
	char str[30]={0};
	u8 *Time_num[7];
	//if(Usart_get)
	PWR_BackupAccessCmd(ENABLE);
	//memset(Blue_str,'\0',100);
	//等待接收
	RCC_RTCCLKCmd(DISABLE);
	RTC_GetTime(RTC_Format_BIN,&RTC_TimeStruct);
	RTC_GetDate(RTC_Format_BIN,&RTC_DateStruct);
	Time_num[3]=&RTC_TimeStruct.RTC_Hours;
	Time_num[4]=&RTC_TimeStruct.RTC_Minutes;
	Time_num[5]=&RTC_TimeStruct.RTC_Seconds;
	Time_num[0]=&RTC_DateStruct.RTC_Year;
	Time_num[1]=&RTC_DateStruct.RTC_Month;
	Time_num[2]=&RTC_DateStruct.RTC_Date;
	Time_num[6]=&RTC_DateStruct.RTC_WeekDay;
	show_Time(25,5,Time_times);
	show_Time(17,3,Time_date);
	while(1){
		//printf("hell\n");
		
		//show_Time(14,3,Time_date);
		Key_a=Button_check_all();
		if(Key==4)		//退出
			break;
		else if(Key==3 && Key_a==1){//设置键
			Flash_=1;
			if(Flash_){
				Flash_num++;
				if(Num_now[0]!=0)
					flash_font(Num_now[0],Num_now[1],str,1);	
				//Flash_num=2;
						//把字写回来
			}	
			if(Flash_num>=7){
				Flash_num=0;
				Flash_=0;
			}
		}
		else if(Key==2){		//减少时间
			if(!(Key_a%10) || Key_a==1){
				printf("123,%d\n",RTC_TimeStruct.RTC_Hours);
				(*Time_num[Flash_num-1])--;
				Time_judge(&RTC_DateStruct.RTC_Year,&RTC_DateStruct.RTC_Month,&RTC_DateStruct.RTC_Date);
				RTC_SetTime(RTC_Format_BIN,&RTC_TimeStruct);
				RTC_SetDate(RTC_Format_BIN,&RTC_DateStruct);
				Key_a=0;
			}
		}
		else if(Key==1){		//减少时间
			if((Key_a>1000 && !(Key_a%100)) || Key_a==1){
				(*Time_num[Flash_num-1])++;
				Time_judge(&RTC_DateStruct.RTC_Year,&RTC_DateStruct.RTC_Month,&RTC_DateStruct.RTC_Date);
				RTC_SetTime(RTC_Format_BIN,&RTC_TimeStruct);
				RTC_SetDate(RTC_Format_BIN,&RTC_DateStruct);
				Key_a=0;
			}
		}
		//delay_ms(100);
		if(Flash_){
			switch(Flash_num){
				case 1:{
					sprintf(str,"20%02d",*Time_num[Flash_num-1]);
					flash_font(18,3,str,0);	
					Num_now[0]=18;
					Num_now[1]=3;
					break;
				}
				case 2:{
					sprintf(str,"%02d",*Time_num[Flash_num-1]);
					flash_font(58,3,str,0);	
					Num_now[0]=58;
					Num_now[1]=3;
					break;
				}
				case 3:{
					sprintf(str,"%02d",*Time_num[Flash_num-1]);
					flash_font(82,3,str,0);
					Num_now[0]=82;
					Num_now[1]=3;
						break;
				}
				case 4:{
					sprintf(str,"%02d",*Time_num[Flash_num-1]);
					flash_font(25,5,str,0);	
					Num_now[0]=25;
					Num_now[1]=5;
						break;
				}
				case 5:{
					sprintf(str,"%02d",*Time_num[Flash_num-1]);
					flash_font(50,5,str,0);
					Num_now[0]=50;
					Num_now[1]=5;
						break;
				}
				case 6:{
					sprintf(str,"%02d",*Time_num[Flash_num-1]);
					flash_font(74,5,str,0);
					Num_now[0]=74;
					Num_now[1]=5;
						break;
				}
				
			}
			
		}
			
		
	/*	
		
		if(Key){
			Num_get=num_get();
#ifdef __TEXT__
			printf("%d\n",Num_get);
#endif
			if(Num_get>=0 && Num_get<=24){
				RTC_TimeStruct.RTC_Hours=Num_get;
				RTC_SetTime(RTC_Format_BIN,&RTC_TimeStruct);
				memset(Blue_str,'\0',100);
				printf("succes set\n");
			}
			else{
				printf("error set\n");
				memset(Blue_str,'\0',100);
			}
		}
		else if(strstr(Blue_str,"Minu=")){
			//Num_get=(Blue_str[5]-'0')*10+Blue_str[6]-'0';
			Num_get=num_get();
#ifdef __TEXT__
			printf("%d,%c,%c\n",Num_get,Blue_str[5],Blue_str[6]);
			printf("%s\n",Blue_str);
			printf("%d\n",Blue_str[5]);
#endif
			if(Num_get>=0 && Num_get<=59){
				RTC_TimeStruct.RTC_Minutes=Num_get;
				RTC_SetTime(RTC_Format_BIN,&RTC_TimeStruct);
				memset(Blue_str,'\0',100);
				printf("succes set");
			}
			else{
				printf("error set\n");
				memset(Blue_str,'0',100);
			}
		}
		else if(strstr(Blue_str,"Seco=")){
			Num_get=num_get();
			if(Num_get>=0 && Num_get<=59){
				RTC_TimeStruct.RTC_Seconds=Num_get;
				RTC_SetTime(RTC_Format_BIN,&RTC_TimeStruct);
				printf("succes set");
			}
			else
				printf("error set\n");
			memset(Blue_str,'\0',100);
		}
		else if(strstr(Blue_str,"Break")){
			printf("exit now");
			PWR_BackupAccessCmd(DISABLE);
			Usart_get=0;
			memset(Blue_str,'\0',100);
			
			break;
		}
		//delay_ms(100);
	}
	*/
	}
	RCC_RTCCLKCmd(ENABLE);
}

void Time_judge(u8 *Year,char *mouth,char *day){
	if(*mouth>12)    //月份判断
		*mouth=1;
	else if(*mouth<=0)
		*mouth=12;
	
	if(*Year>150)
		*Year=99;
	else if(*Year>99)
		*Year=0;
	
	if(*day>28 && *mouth==2 && *day<100){
		if(!(*Year%400) || (!(*Year%4) && *Year%400)){
			if(*day>29)
				*day=1;
		}
		else
			*day=1;
	}
	else if(*day>30 && *day<100){
		if(!(*mouth==1 || *mouth==3 || *mouth==5 || *mouth==7 || *mouth==8 || *mouth==10 ||*mouth==12)){
			*day=1;
		}
		else if(*day>31)
			*day=1;
	}
	else if(*day<=0){
		if((*mouth==1 || *mouth==3 || *mouth==5 || *mouth==7 || *mouth==8 || *mouth==10 ||*mouth==12)){
			*day=31;
		}
		else if(*mouth==2){
			if(!(*Year%400) || (!(*Year%4) && *Year%400))
				*day=29;
			else
				*day=28;
		}
	}
		

}

void flash_font(char x,char y,char str[],char Compulsory){
	static char Flash_sta=0;
	static int Flash_num=0;
	Flash_num++;
	if(Flash_num>=10000 || Compulsory){
		if(!Flash_sta && !Compulsory){
			if(strlen(str)>=4){
				OLED_ShowCN(x,y,29);
				OLED_ShowCN(x+16,y,29);			
			}
			else
				OLED_ShowCN(x,y,29);
		}
		else
			OLED_ShowStr(x,y,(unsigned char *)str,2);
		Flash_sta=!Flash_sta;
		Flash_num=0;
	}
}